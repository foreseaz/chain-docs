(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{232:function(e,t,n){"use strict";n.r(t);var a=n(28),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"thaler-testnet-running-nodes-linux-only"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#thaler-testnet-running-nodes-linux-only"}},[e._v("#")]),e._v(" Thaler Testnet: Running Nodes (Linux only)")]),e._v(" "),n("p",[e._v("The Crypto.com Chain Testnet has been named as "),n("strong",[e._v("“Thaler”")]),e._v(".")]),e._v(" "),n("p",[e._v("This is an early tutorial for the developers and brave and patient super-early adopters.")]),e._v(" "),n("h2",{attrs:{id:"common-setup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#common-setup"}},[e._v("#")]),e._v(" Common Setup")]),e._v(" "),n("h3",{attrs:{id:"step-0-install-intel-sgx-sdk-2-8-and-other-pre-requisites"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-0-install-intel-sgx-sdk-2-8-and-other-pre-requisites"}},[e._v("#")]),e._v(" Step 0. Install Intel SGX SDK 2.8 and other pre-requisites")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Make sure your CPU supports SGX and it is enabled in BIOS. "),n("a",{attrs:{href:"https://github.com/ayeks/SGX-hardware",target:"_blank",rel:"noopener noreferrer"}},[e._v("This GitHub repository"),n("OutboundLink")],1),e._v(" has more information about supported hardware and cloud vendors.")])]),e._v(" "),n("li",[n("p",[e._v("You can download the Linux SGX SDK installers from the Intel Open Source "),n("a",{attrs:{href:"https://01.org/intel-softwareguard-extensions/downloads/intel-sgx-linux-2.8-release",target:"_blank",rel:"noopener noreferrer"}},[e._v("website"),n("OutboundLink")],1),e._v(". More details can be found in this "),n("a",{attrs:{href:"https://download.01.org/intel-sgx/sgx-linux/2.8/docs/Intel_SGX_Installation_Guide_Linux_2.8_Open_Source.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("installation guide"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v('Note that some motherboards may have only "software controlled" option where '),n("a",{attrs:{href:"https://github.com/intel/linux-sgx/issues/354#issuecomment-447961815",target:"_blank",rel:"noopener noreferrer"}},[e._v("an extra step is needed for enabling it"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("You may also need to install libzmq (e.g. "),n("a",{attrs:{href:"https://packages.ubuntu.com/xenial/libzmq3-dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("libzmq3-dev"),n("OutboundLink")],1),e._v(" package in Ubuntu 18.04).")])])]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),n("p",[e._v("There is an Ubuntu-based Docker image "),n("code",[e._v("cryptocom/chain:latest")]),e._v(" on Dockerhub that\nhas Intel PSW and other dependencies pre-installed\n(you still need to have the SGX driver installed on the host and\nexpose it to the container by running docker with the "),n("code",[e._v("--device /dev/isgx")]),e._v(" flag).")])]),e._v(" "),n("h3",{attrs:{id:"step-1-get-tendermint-and-chain-v0-3-released-binaries"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-1-get-tendermint-and-chain-v0-3-released-binaries"}},[e._v("#")]),e._v(" Step 1. Get Tendermint and Chain v0.3 released binaries")]),e._v(" "),n("p",[e._v("Download the latest version of "),n("a",{attrs:{href:"https://docs.tendermint.com/master/introduction/install.html#from-binary",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint 0.32.*"),n("OutboundLink")],1),e._v(".\nChain v0.3 can be "),n("a",{attrs:{href:"https://github.com/crypto-com/chain/releases/download/v0.3.1/crypto-com-chain-release-0.3.1.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[e._v("downloaded from GitHub"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("CAUTION")]),e._v(" "),n("p",[e._v("Crypto.com Chain v0.3 is not backwards compatible with v0.2 released earlier. So, if you were running a node with the old\nversion of Crypto.com Chain, you'll have to delete all the associated data.")]),e._v(" "),n("p",[e._v("Also note "),n("a",{attrs:{href:"https://github.com/crypto-com/chain/releases/tag/v0.3.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("released binary changes"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("h3",{attrs:{id:"step-2-configure-tendermint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-2-configure-tendermint"}},[e._v("#")]),e._v(" Step 2. Configure Tendermint")]),e._v(" "),n("p",[e._v("After placing all binaries on the path. You can initialize Tendermint with "),n("code",[e._v("tendermint init")]),e._v(".\nIn "),n("code",[e._v(".tendermint/config/")]),e._v(", change the content of "),n("code",[e._v("genesis.json")]),e._v(" to:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n    "app_hash": "54F4F05167492B83F0135AA55D27308C43AEA36E3FE91F4AD21028728207D70F",\n    "app_state": {\n        "council_nodes": {\n            "0x6dbd5b8fe0dad494465aa7574defba711c184102": [\n                "westeurope",\n                "security@crypto.com",\n                {\n                    "type": "tendermint/PubKeyEd25519",\n                    "value": "11/ZonHB4wuTTRKnsy6EMfzj1gTo7ywcqIqZhbI1znQ="\n                }\n            ],\n            "0x6fc1e3124a7ed07f3710378b68f7046c7300179d": [\n                "eastus",\n                "security@crypto.com",\n                {\n                    "type": "tendermint/PubKeyEd25519",\n                    "value": "uHRMASqk9LSVuCNv0XwKpg1EGRs1GpCDHZ0cnXCFfbA="\n                }\n            ],\n            "0xb8c6886da09e12db8aebfc8108c67ce2ba086ac6": [\n                "eastus2",\n                "security@crypto.com",\n                {\n                    "type": "tendermint/PubKeyEd25519",\n                    "value": "A5hAzOez47vox/Lq+qulVoURKS6k6s6r9c/YmCilbNA="\n                }\n            ]\n        },\n        "distribution": {\n            "0x3288bdff8ef3c7dbdc9faef3f18a134044804a19": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0x4ae85b35597fcb61c6c47b1fe0bdd7eed8421cdd": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0x4b75f275dde0a8c8e70fb84243adc97a3afb78f2": [\n                "UnbondedFromGenesis",\n                "7946000000000000000"\n            ],\n            "0x4fd8162521f2e628adced7c1baa39384a08b4a3d": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0x6c2be7846219eab3086a66f873558b73d8f4a0d4": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0x6dbd5b8fe0dad494465aa7574defba711c184102": [\n                "Bonded",\n                "6000000000000000"\n            ],\n            "0x6fc1e3124a7ed07f3710378b68f7046c7300179d": [\n                "Bonded",\n                "6000000000000000"\n            ],\n            "0x916f9e34e140c43f3853f2949c3ea95da5eb6098": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0x9baa6de71cbc6274275eece4b1be15f545897f37": [\n                "UnbondedFromGenesis",\n                "6000000000000000"\n            ],\n            "0xb8c6886da09e12db8aebfc8108c67ce2ba086ac6": [\n                "Bonded",\n                "6000000000000000"\n            ]\n        },\n        "network_params": {\n            "initial_fee_policy": {\n                "coefficient": 1250,\n                "constant": 1100\n            },\n            "jailing_config": {\n                "block_signing_window": 720,\n                "jail_duration": 3600,\n                "missed_block_threshold": 360\n            },\n            "max_validators": 50,\n            "required_council_node_stake": "5000000000000000",\n            "rewards_config": {\n                "monetary_expansion_cap": "2000000000000000000",\n                "monetary_expansion_decay": 999860,\n                "monetary_expansion_r0": 350,\n                "monetary_expansion_tau": 999999999999999999,\n                "reward_period_seconds": 86400\n            },\n            "slashing_config": {\n                "byzantine_slash_percent": "0.200",\n                "liveness_slash_percent": "0.100",\n                "slash_wait_period": 1800\n            },\n            "unbonding_period": 5400\n        }\n    },\n    "chain_id": "testnet-thaler-crypto-com-chain-42",\n    "consensus_params": {\n        "block": {\n            "max_bytes": "22020096",\n            "max_gas": "-1",\n            "time_iota_ms": "1000"\n        },\n        "evidence": {\n            "max_age": "100000"\n        },\n        "validator": {\n            "pub_key_types": [\n                "ed25519"\n            ]\n        }\n    },\n    "genesis_time": "2020-02-17T19:39:53.60362Z",\n    "validators": [\n        {\n            "address": "38F9D0F3B1721EA6F25ACBC6A5B4C7381281CE13",\n            "name": "westeurope",\n            "power": "60000000",\n            "pub_key": {\n                "type": "tendermint/PubKeyEd25519",\n                "value": "11/ZonHB4wuTTRKnsy6EMfzj1gTo7ywcqIqZhbI1znQ="\n            }\n        },\n        {\n            "address": "E6CAA77DFC2069BE8657126F2749F484A3EAEAC0",\n            "name": "eastus",\n            "power": "60000000",\n            "pub_key": {\n                "type": "tendermint/PubKeyEd25519",\n                "value": "uHRMASqk9LSVuCNv0XwKpg1EGRs1GpCDHZ0cnXCFfbA="\n            }\n        },\n        {\n            "address": "F2CBB18A10F3475EAC8C6AFF96840BA4B4DAD857",\n            "name": "eastus2",\n            "power": "60000000",\n            "pub_key": {\n                "type": "tendermint/PubKeyEd25519",\n                "value": "A5hAzOez47vox/Lq+qulVoURKS6k6s6r9c/YmCilbNA="\n            }\n        }\n    ]\n}\n')])])]),n("p",[e._v("For network configuration, in "),n("code",[e._v(".tendermint/config/config.toml")]),e._v(", you can put the following as "),n("code",[e._v("seeds")]),e._v(" and "),n("code",[e._v("create_empty_blocks_interval")]),e._v(":")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('seeds = "111373a933869a49a69fa59b09932ceec29ee34b@40.76.4.61:26656,421c21179e12f17923a1fe8d631a16079d6c32c4@40.87.120.191:26656,fa3bbe6e895eea77e4321a83a863e794cf2e2929@13.94.133.75:26656"\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('create_empty_blocks_interval = "60s"\n')])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),n("p",[e._v("This page only shows the minimal setup.")]),e._v(" "),n("p",[e._v("Depending on what you wish to test on the testnet, e.g. monitoring, you can refer to the "),n("a",{attrs:{href:"https://docs.tendermint.com/master/tendermint-core/configuration.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint documentation"),n("OutboundLink")],1),e._v(" for more details.")])]),e._v(" "),n("h3",{attrs:{id:"step-3-run-everything"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-run-everything"}},[e._v("#")]),e._v(" Step 3. Run everything")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Make sure "),n("code",[e._v("aesmd")]),e._v(" service is running (you may potentially start it up manually with "),n("code",[e._v("LD_LIBRARY_PATH=/opt/intel/libsgx-enclave-common/aesm /opt/intel/libsgx-enclave-common/aesm/aesm_service")]),e._v(").")])]),e._v(" "),n("li",[n("p",[e._v("The full node (exposed for wallets / clients) and the council node (validator) have slightly different steps described in the following sections.")])])]),e._v(" "),n("h2",{attrs:{id:"running-a-full-node-to-serve-data-to-wallets-clients"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-a-full-node-to-serve-data-to-wallets-clients"}},[e._v("#")]),e._v(" Running a full node (to serve data to wallets / clients)")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("CAUTION")]),e._v(" "),n("p",[e._v("This page only shows the minimal setup.")]),e._v(" "),n("p",[e._v("You may want to disable unsafe operations in Tendermint configuration,\nrestrict the incoming connections RPC connections (e.g. over NGINX or equivalent), want to execute the processes using supervisor or equivalent etc.")])]),e._v(" "),n("h3",{attrs:{id:"step-3-a-1-obtain-and-set-the-service-provider-credentials-for-development"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-a-1-obtain-and-set-the-service-provider-credentials-for-development"}},[e._v("#")]),e._v(" Step 3-a-1. Obtain and set the service provider credentials for development")]),e._v(" "),n("p",[e._v("On the "),n("a",{attrs:{href:"https://api.portal.trustedservices.intel.com/EPID-attestation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel's developer portal"),n("OutboundLink")],1),e._v(',\nyou can obtain credentials for the non-production Intel Attestation Service.\nChoose "unlinkable quotes".')]),e._v(" "),n("p",[e._v("Once you obtained the credentials in the portal, set the following environment variables:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("SPID")]),e._v(': set it to the "Service Provider ID" value from the portal')]),e._v(" "),n("li",[n("code",[e._v("IAS_API_KEY")]),e._v(": set it to the primary or secondary API key from the portal")])]),e._v(" "),n("h3",{attrs:{id:"step-3-a-2-run-everything"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-a-2-run-everything"}},[e._v("#")]),e._v(" Step 3-a-2. Run everything")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Start the tx-query enclave app (in "),n("code",[e._v("tx-query-HW-debug/")]),e._v("), e.g.:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("RUST_LOG=info ./tx-query-app 0.0.0.0:3322 ipc://$HOME/enclave.socket\n")])])])]),e._v(" "),n("li",[n("p",[e._v("Start chain-abci, e.g.:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("RUST_LOG=info ./chain-abci --chain_id testnet-thaler-crypto-com-chain-42 --genesis_app_hash 54F4F05167492B83F0135AA55D27308C43AEA36E3FE91F4AD21028728207D70F --enclave_server ipc://$HOME/enclave.socket --tx_query <EXTERNAL_IP/HOSTNAME>:3322\n")])])])]),e._v(" "),n("li",[n("p",[e._v("Finally, start Tendermint:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("tendermint node\n")])])])])]),e._v(" "),n("h2",{attrs:{id:"running-a-council-node-validator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-a-council-node-validator"}},[e._v("#")]),e._v(" Running a council node (validator)")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("CAUTION")]),e._v(" "),n("p",[e._v("This page only shows the minimal setup.")]),e._v(" "),n("p",[e._v("You may want to run full nodes (see above)\nas sentries (see "),n("a",{attrs:{href:"https://docs.tendermint.com/master/tendermint-core/running-in-production.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint"),n("OutboundLink")],1),e._v(" and "),n("RouterLink",{attrs:{to:"/getting-started/notes-on-production-deployment.html"}},[e._v("local notes on production deployment")]),e._v("), restrict your validator connections to only connect to your full nodes,\ntest secure storage of validator keys etc.")],1)]),e._v(" "),n("h3",{attrs:{id:"step-3-b-0-optional-restoring-a-wallet-and-re-depositing-the-balance"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-0-optional-restoring-a-wallet-and-re-depositing-the-balance"}},[e._v("#")]),e._v(" Step 3-b-0. (Optional) restoring a wallet and re-depositing the balance")]),e._v(" "),n("p",[e._v("If you participated in the 0.2 testnet and have backed up your seed phrase, you can restore it with, for example:")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli wallet restore --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),n("p",[e._v("You can then create a staking address with:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ client-cli address new --name <WALLET_NAME> --type Staking\n")])])]),n("p",[e._v("If the created address matches one of the ones listed in the initial genesis.json distribution,\nyou can (see Step 3-b-1 for environment variable details):")]),e._v(" "),n("ol",[n("li",[e._v("create a transfer address, e.g. using:")])]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli address new --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --type Transfer\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[e._v("submit a withdraw transaction, e.g. using:")])]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli transaction new --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --type Withdraw\n")])])]),n("p",[e._v("with the transfer transaction details")]),e._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[e._v("sync your wallet, e.g. using:")])]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("sync")]),e._v("  --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" \n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[e._v("submit a deposit transaction, e.g. using")])]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli transaction new --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --type deposit-amount\n")])])]),n("p",[e._v("with your staking address")]),e._v(" "),n("p",[e._v("If you managed to successfully deposit the minimum required bonded amount, you can skip to Step 3-b-3.")]),e._v(" "),n("h3",{attrs:{id:"step-3-b-1-create-a-staking-address"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-1-create-a-staking-address"}},[e._v("#")]),e._v(" Step 3-b-1. Create a staking address")]),e._v(" "),n("p",[e._v("This can be done, for example, with the client-cli command-line tool. Set the required environment variables:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("CRYPTO_CHAIN_ID=testnet-thaler-crypto-com-chain-42")])]),e._v(" "),n("li",[n("code",[e._v("CRYPTO_CLIENT_TENDERMINT <YOUR FULL NODE, e.g. ws://localhost:26657/websocket or ws://13.94.208.212:26657/websocket>")])])]),e._v(" "),n("p",[e._v("And run (see "),n("RouterLink",{attrs:{to:"/wallets/client-cli.html"}},[e._v("more details")]),e._v("):")],1),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli wallet new --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --type hd\n$ client-cli address new --name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("WALLET_NAME"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --type Staking\n")])])]),n("p",[e._v("You should obtain a hexadecimal-encoded address, e.g. "),n("code",[e._v("0xa861a0869c02ab8b74c7cb4f450bcbeb1e472b9a")])]),e._v(" "),n("h3",{attrs:{id:"step-3-b-2-deposit-the-minimal-required-stake"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-2-deposit-the-minimal-required-stake"}},[e._v("#")]),e._v(" Step 3-b-2. Deposit the minimal required stake")]),e._v(" "),n("p",[e._v("Unless you have obtained the CRO testnet token before, simply send a message on "),n("a",{attrs:{href:"https://gitter.im/crypto-com/community",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gitter"),n("OutboundLink")],1),e._v(",\nstating who you are and your staking address (@devashishdxt or @lezzokafka would typically reply within a day).")]),e._v(" "),n("h3",{attrs:{id:"step-3-b-3-create-a-validator-key-pair"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-3-create-a-validator-key-pair"}},[e._v("#")]),e._v(" Step 3-b-3. Create a validator key pair")]),e._v(" "),n("p",[e._v("If you plan to test a production setting with the Tendermint Key Management System (KMS) tool,\nplease see "),n("RouterLink",{attrs:{to:"/getting-started/notes-on-production-deployment.html"}},[e._v("production deployment notes")]),e._v(" how it can be converted at the current (0.7) version.\nIn a development mode, the full key pair is located in the "),n("code",[e._v("priv_validator_key.json")]),e._v(" file (generated with "),n("code",[e._v("tendermint init")]),e._v(").\nThe public key should be base64-encoded, e.g. "),n("code",[e._v("R9/ktG1UifLZ6nMHNA/UZUaDiLAPWt+m9I4aujcAz44=")]),e._v(".")],1),e._v(" "),n("h3",{attrs:{id:"step-3-b-4-run-everything"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-4-run-everything"}},[e._v("#")]),e._v(" Step 3-b-4. Run everything")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Start chain-abci, e.g.:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("RUST_LOG=info ./chain-abci --chain_id testnet-thaler-crypto-com-chain-42 --genesis_app_hash 54F4F05167492B83F0135AA55D27308C43AEA36E3FE91F4AD21028728207D70F\n")])])])]),e._v(" "),n("li",[n("p",[e._v("Finally, start Tendermint:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("tendermint node\n")])])])])]),e._v(" "),n("h3",{attrs:{id:"step-3-b-5-send-a-council-node-join-request-transaction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#step-3-b-5-send-a-council-node-join-request-transaction"}},[e._v("#")]),e._v(" Step 3-b-5. Send a council node join request transaction")]),e._v(" "),n("p",[e._v("As in Step 3-b-1, this can be done, for example, with "),n("code",[e._v("client-cli")]),e._v(" with the required environment variables.")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("$ client-cli transaction new --name Default --type node-join\n")])])]),n("h2",{attrs:{id:"thaler-testnet-block-explorer-and-cro-faucet"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#thaler-testnet-block-explorer-and-cro-faucet"}},[e._v("#")]),e._v(" Thaler testnet block explorer and CRO faucet")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("You are welcome to utilize the "),n("a",{attrs:{href:"https://chain.crypto.com/explorer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Crypto.com Chain Explorer"),n("OutboundLink")],1),e._v(" to search and get more information on blocks and transactions on "),n("strong",[e._v("Thaler")]),e._v(" testnet network.")])]),e._v(" "),n("li",[n("p",[e._v("To interact with the blockchain, simply use the "),n("a",{attrs:{href:"https://chain.crypto.com/explorer/faucet",target:"_blank",rel:"noopener noreferrer"}},[e._v("CRO faucet"),n("OutboundLink")],1),e._v(" to obtain test CRO tokens for performing transactions on the "),n("strong",[e._v("Thaler")]),e._v(" testnet.")]),e._v(" "),n("ul",[n("li",[e._v("Note that you will need to create a "),n("RouterLink",{attrs:{to:"/wallets/client-cli.html#wallet-new-create-a-new-wallet"}},[e._v("wallet")]),e._v(", a "),n("RouterLink",{attrs:{to:"/wallets/client-cli.html#address-new-create-a-new-address"}},[e._v("transfer address")]),e._v(" and obtain the "),n("RouterLink",{attrs:{to:"/wallets/client-cli.html#view-key-obtain-the-view-key"}},[e._v("viewkey")]),e._v(" before using the faucet.")],1)])])])])}),[],!1,null,null,null);t.default=s.exports}}]);